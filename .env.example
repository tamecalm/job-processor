# =================================
# JOB PROCESSOR CONFIGURATION
# =================================

# Server Configuration
# Port for the application server
PORT=3000

# Environment (development, staging, production)
NODE_ENV=development

# =================================
# DATABASE CONFIGURATION
# =================================

# MongoDB Connection
# Local MongoDB
MONGO_URI=mongodb://localhost:27017/job_processor

# MongoDB Atlas (Cloud) - Replace with your connection string
MONGO_URI=mongodb+srv://username:password@cluster.mongodb.net/job_processor?retryWrites=true&w=majority

# MongoDB with Authentication (Self-hosted)
MONGO_URI=mongodb://username:password@localhost:27017/job_processor?authSource=admin

# =================================
# REDIS CONFIGURATION
# =================================

# Redis Connection
# Local Redis
REDIS_URI=redis://localhost:6379

# Redis with Authentication
REDIS_URI=redis://username:password@localhost:6379

# Redis with TLS (Upstash, Redis Cloud, etc.)
REDIS_URI=rediss://default:password@host:port

# Upstash Redis Example
REDIS_URI=rediss://default:your-password@your-host.upstash.io:6380

# Redis Labs/Redis Cloud Example
REDIS_URI=rediss://default:password@redis-12345.c1.us-east-1-1.ec2.cloud.redislabs.com:12345

# Alternative Redis Configuration (if using separate variables)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_USERNAME=default
REDIS_PASSWORD=your-redis-password

# =================================
# SECURITY CONFIGURATION
# =================================

# JWT Secret Key (CHANGE THIS IN PRODUCTION!)
# Generate a secure random string: openssl rand -base64 32
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production-256-bits

# Admin Password for Dashboard Access
# Use a strong password in production
ADMIN_PASSWORD=your-secure-admin-password

# =================================
# OPTIONAL CONFIGURATION
# =================================

# Rate Limiting Configuration
RATE_LIMIT_POINTS=100
RATE_LIMIT_DURATION=3600

# Logging Configuration
LOG_LEVEL=info
LOG_FILE=combined.log

# Worker Configuration
WORKER_CONCURRENCY=5
JOB_ATTEMPTS=3
JOB_BACKOFF_DELAY=2000

# =================================
# PRODUCTION ENVIRONMENT EXAMPLE
# =================================

# For production deployment, use these settings:
NODE_ENV=production
PORT=3000
MONGO_URI=mongodb+srv://prod-user:secure-password@prod-cluster.mongodb.net/job_processor_prod
REDIS_URI=rediss://default:secure-redis-password@prod-redis-host:6380
JWT_SECRET=super-secure-random-256-bit-string-generated-with-openssl
ADMIN_PASSWORD=very-secure-admin-password-with-special-chars

# =================================
# DEVELOPMENT ENVIRONMENT EXAMPLE
# =================================

# For local development with Docker Compose:
NODE_ENV=development
PORT=3000
MONGO_URI=mongodb://root:password@mongodb:27017/job_processor?authSource=admin
REDIS_URI=redis://redis:6379
JWT_SECRET=dev-jwt-secret-key
ADMIN_PASSWORD=admin

# =================================
# TESTING ENVIRONMENT
# =================================

# Create a separate .env.test file for testing:
NODE_ENV=test
MONGO_URI=mongodb://localhost:27017/job_processor_test
REDIS_URI=redis://localhost:6379
JWT_SECRET=test-jwt-secret
ADMIN_PASSWORD=test-admin

# =================================
# CLOUD PROVIDER EXAMPLES
# =================================

# AWS DocumentDB (MongoDB Compatible)
MONGO_URI=mongodb://username:password@docdb-cluster.cluster-xyz.us-east-1.docdb.amazonaws.com:27017/job_processor?ssl=true&replicaSet=rs0&readPreference=secondaryPreferred&retryWrites=false

# AWS ElastiCache Redis
REDIS_URI=rediss://master.redis-cluster.xyz.cache.amazonaws.com:6380

# Google Cloud Memorystore Redis
REDIS_URI=rediss://10.0.0.1:6380

# Azure Cache for Redis
REDIS_URI=rediss://your-cache.redis.cache.windows.net:6380

# =================================
# DOCKER COMPOSE CONFIGURATION
# =================================

# When using docker-compose.yml, these variables will be used:
MONGO_URI=mongodb://root:password@mongodb:27017/job_processor?authSource=admin
REDIS_URI=redis://redis:6379

# =================================
# SECURITY NOTES
# =================================

# 1. Never commit this file with real credentials to version control
# 2. Use strong, unique passwords for production
# 3. Rotate JWT secrets regularly in production
# 4. Use TLS/SSL for all database connections in production
# 5. Consider using environment-specific secret management (AWS Secrets Manager, Azure Key Vault, etc.)
# 6. Restrict database access to specific IP addresses/networks
# 7. Enable database authentication and authorization
# 8. Use read-only database users where possible
# 9. Monitor and log all database access
# 10. Regularly update and patch all dependencies

# =================================
# TROUBLESHOOTING
# =================================

# Common Issues:
# 1. MongoDB connection timeout: Check network connectivity and authentication
# 2. Redis connection failed: Verify Redis server is running and accessible
# 3. JWT token invalid: Ensure JWT_SECRET matches between sessions
# 4. Dashboard login failed: Check ADMIN_PASSWORD configuration
# 5. Jobs not processing: Verify Redis connection and worker initialization

# Debug Mode:
Set NODE_ENV=development for detailed logging and error messages